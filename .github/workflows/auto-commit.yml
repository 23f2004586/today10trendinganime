#
name: Update Trending Anime List

on:
  schedule:
    # Runs at 00:30 UTC (6:00 AM IST) and 12:30 UTC (6:00 PM IST).
    - cron: '30 0 * * *'
    - cron: '30 12 * * *'
  workflow_dispatch:

jobs:
  update_readme_with_anime:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out your repository's code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Fetch Top 10 Trending Anime and Format List
      # This step creates the header, adds a timestamp, then appends the formatted list.
      - name: Fetch and Format Anime List
        run: |
          echo "### ðŸ“ˆ Top 10 Trending Anime" > ANIME_LIST.md
          echo "" >> ANIME_LIST.md
          echo "*Last updated on: $(TZ='Asia/Kolkata' date)*" >> ANIME_LIST.md
          echo "" >> ANIME_LIST.md
          curl -s "https://api.jikan.moe/v4/top/anime?filter=airing&limit=10" \
          | jq -r '.data | map("\(.rank). [\(.title)](https://myanimelist.net/anime/\(.mal_id)) - Score: \(.score // "N/A")") | join("\n")' \
          >> ANIME_LIST.md

      # Step 3: Update the README.md file with the new list
      # This uses Python to reliably replace the content between the start/end markers.
      - name: Update README
        run: |
          python -c "
          import re
          with open('README.md', 'r+') as f:
              readme = f.read()
              with open('ANIME_LIST.md', 'r') as new_content_file:
                  new_content = new_content_file.read()
              # Use regex to replace content between markers
              updated_readme = re.sub(
                  r'()(.|\n)*?()',
                  r'\n' + new_content + '\n',
                  readme
              )
              f.seek(0)
              f.write(updated_readme)
              f.truncate()
          "

      # Step 4: Archive the updated README file
      # This step creates an 'archive' directory and copies the updated README into it
      # with a timestamped filename.
      - name: Archive updated README
        run: |
          TIMESTAMP=$(TZ='Asia/Kolkata' date +'%Y-%m-%d_%H-%M-%S')
          cp README.md archive/$TIMESTAMP.md

      # Step 5: Commit and Push the changes
      # This will commit both the updated README and the new archive file.
      - name: Commit and Push changes
        run: |
          # This configures git to use your GitHub username and a no-reply email
          # so the commit is attributed to your profile.
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          
          # Add, commit, and push only if there are changes
          if [[ -n $(git status -s) ]]; then
            git add .
            git commit -m "Automated update: Top 10 trending anime"
            git push https://${{ secrets.ACTION_PAT }}@github.com/${{ github.repository }}.git HEAD:main
          else
            echo "No changes to commit."
          fi
